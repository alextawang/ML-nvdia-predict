#import the libraries
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import classification_report
import matplotlib.pyplot as plt



#read in the data
df = pd.read_csv('stock_data_NVDA.csv',encoding='unicode_escape')
#show the data
print(df.columns)
df

df.sort_values(by=df.columns[0],inplace=True)
df.to_csv('sorted_stock_data_NVDA.csv',index=False)
df


df = pd.read_csv('sorted_stock_data_NVDA.csv',encoding='unicode_escape')
df['Date'] = pd.to_datetime(df['Date'])
df.sort_values(by='Date', inplace=True)
df["Volume"] = df["Volume"].replace({",",""},regex=True).astype(float)
df.to_csv('sorted_stock_data_NVDA.csv',index=False)
df


df.plot(x="Date",y="Close")
plt.xticks(rotation=95)
plt.title('close Price History')
plt.ylabel("Price")
plt.show()


#create the model
model = RandomForestRegressor(  )

#train the model
X=df[["Open","High","Low","Volume"]]
X=X[:int(len(df)-2)]

y=df["Close"].shift(-1)
y=y[:int(len(df)-2)]
model.fit(X,y)

#test the model
print('the model score is ',model.score(X,y))


#make predictions
new_data = df[["Open","High","Low","Volume"]].tail(2)[0:1]
prediction = model.predict(new_data)
print('the model prodicts the last day price to be : ',prediction)
print('Actual value:',df[["Close"]].tail(1).values[0][0])

